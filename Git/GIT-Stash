**Кладём в стэш!**
Потом тебе понадобилось переключиться на другую ветку, но так как не хочется коммитить незаконченные изменения, 
их лучше будет сохранить в стэш. Для того чтобы положить новую пачку изменений в стек стэша, набери команду
_git stash_

Чтобы увидеть содержимое стека, можно воспользоваться командой
_git stash list_

**А обратно?**
Как вернуть изменения из стэша? Командой git stash apply. 
Тут видно, что в стеке помимо нашей пачки изменений (последний коммит с комментарием 'base file'), есть еще предыдущие изменения. 
По умолчанию, командой _git stash apply_ применится только последнее добавленное. 
Если же хочется применить более раннее изменение - то надо указать его в явном виде, например:
_git stash apply stash@{2}_
Итак, примени команду

_git stash apply_ - не удален из стека и не проиндексированы файлы
Видно, что по факту выполнения этой команды git повторно применяет изменения к тем файлам, 
коммиты которых были отменены на момент сохранения изменений в стэш. 
Тут до возвращения изменений из стэша у нас была чистая ветка, и возвратили мы изменения в ту же ветку. 
Но это не обязательное условие - возвращать изменения можно и в другую ветку, и в ветку с "грязным" состоянием. 
В случае повторного изменения тех же самых файлов будут конфликты слияния.

Давай для начала вернем изменения, возвращенные из стеша. Как же это сделать? 
В некоторых случаях (например, по воле злого тимлида =)) нужно сначала вернуть изменения из стэша. 
потом сделать еще несколько изменений, а затем (внезапно) оказывается, что те изменения, 
которые были в стэше - не нужны и их надо отменить, оставив при этом изменения, выполненные после них. 
Как таковой команды git stash unapply или ей подобной нет, но это сделать можно связкой (конвейером) команд:

_git stash show -p | git apply -R_
Если номер индекса не указан, то по умолчанию как и с git apply. берется последний из стека.
То есть команда выше эквивалентна команде: git stash show -p stash@{0} | git apply -R

git stash apply --index - проиндексирует, что было проиндексировано до этого
И посмотри, в каком виде будут вытащены последние изменения из стэша:

**Drop и pop.**
Видно, что команда git stash apply не убирает из стека примененные изменения.
Чтобы сделать это, нужно выполнить команду _git stash drop_:
_git stash drop stash@{0}_

Альтернатива связке команд git stash apply и git stash drop - команда git stash pop 
- в этом случае изменения возвращаются из стэша и тут же удаляются из стека.
